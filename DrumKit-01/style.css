body{
  margin:0;
  padding:0;
  box-sizing: border-box;
  background:url('assets/images/bg.webp');
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
  position: relative;
  
}
body::before{
  content: "";
  position: absolute;
  background-color: rgba(0, 0, 0, 0.911);
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 2;
}
.snow-wrap{

}
.snow, .snow::after, .snow::before{
  position: absolute;
  /* width: 100%; */
  /* height: 100%; */
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  content: "";
  background-image: radial-gradient(3px 3px at 100px 50px, #fff, transparent 50%),
                    radial-gradient(6px 6px at 200px 150px, #fff, transparent 50%),
                    radial-gradient(9px 9px at 300px 200px, #fff, transparent 50%),
                     radial-gradient(3px 3px at 400px 300px, #fff, transparent 50%),
                    radial-gradient(6px 6px at 530px 400px, #fff, transparent 50%),
                    radial-gradient(9px 9px at 670px 500px, #fff, transparent 50%),
                   radial-gradient(3px 3px at 740px 60px, #fff, transparent 50%),
                    radial-gradient(6px 6px at 800px 120px, #fff, transparent 50%),
                    radial-gradient(9px 9px at 900px 220px, #fff, transparent 50%);
  background-size: 600px 200px;
  animation: animate 10s linear infinite;
  z-index: 120;
}
.snow::after{
  margin-left: -250px;
  opacity: .5;
  filter: blur(2px);

}
.snow::before{
  margin-left: -350px;
  opacity: .7;
  filter: blur(1px);

}
.key-container{
  height: 100vh;
  display: flex;
  gap: 20px;
  justify-content: center;
  align-items: center;
  z-index: 2000;
}
.key-pad{
  border: 2px solid rgb(255, 116, 116);
  border-radius: 4px;
  padding: 6px 10px;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: Georgia, 'Times New Roman', Times, serif;
  font-size: 26px;
  font-weight: 600;
  width: 70px;
  z-index: 99;
}
.key-pad>span{
  color: #dbc608;
  font-size: 16px;
  font-weight: 200;
  letter-spacing: 1.4px;
}

.key-pad-effect{
  animation: scaleAnimation 1s ease-in;
  box-shadow: 2px 2px 20px 5px #ffe20863;

}
@keyframes scaleAnimation{
  0%{
    width: fit-content;
  }
  100%{
    transform: scale(12);
    
  }
}
@keyframes animate{
  0%{
    background-position: -700px 0;
  }
  100%{
    background-position: 0px 700px;
  }
}

/* resposive for mobile devices */
@media only screen and (max-width: 600px) {
  .key-container{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(6, 1fr);
    place-items: center;

  }
}
/* change the cursor pointer on screen hover*/
body:hover{
  cursor: url('assets/images/cursor.png'), pointer;
}
/*
This document is a list of what i have done in the DrumKit-01 folder of my 30 days of JavaScript challenge.

I have created a background image of a snowman, created a key pad with the keys A, S, D, F, G, H, J, K, and L, given them the names of different drum sounds, and given them corresponding sounds when the keys are pressed. I have also added animations to the key pad when a key is pressed.

I have also added a responsive design for mobile devices, and changed the cursor pointer on screen hover to a drumstick cursor.

I have also added snow falling animation to the background to give the effect of snow falling from the top of the screen.

I have also used the fetch API to get the data from the data.json file and then used the data to create the key pad and add the sounds to the key pad.

I have used the addEventListener method to listen for the keydown event and then used the event object to get the key that was pressed. I have also used the setTimeout method to remove the animation class from the key pad after a certain amount of time.

I have used the Media Queries to change the display of the key pad from a block element to a grid element on mobile devices.

I have used the @keyframes rule to create the animation for the key pad and the background image.

I have used the url() function to give the background image a url of the snowman image, and the url() function to give the background image a url of the snowman image.

I have used the transform property to scale the key pad when a key is pressed.

I have used the transition property to give the scale animation a smooth animation.

I have used the cursor property to give the screen a drumstick cursor when the user hovers over the screen.

I have used the animation-fill-mode property to keep the animation visible after it has finished running.

I have used the animation-direction property to run the animation backwards when it has finished running.

I have used the animation-iteration-count property to run the animation only once.

I have used the animation property to give the animation a name of "scaleAnimation", and the animation property to give the animation a name of "animate".
*/